import { renderBlock } from './lib.js';
export function renderUserBlock(userName, avatarLink, favoriteItemsAmount) {
    localStorage.setItem('user', JSON.stringify({ userName: userName, avatarLink: avatarLink }));
    if (favoriteItemsAmount) {
        localStorage.setItem('favoritesAmount', JSON.stringify({ favoriteItemsAmount: favoriteItemsAmount }));
    }
    const favoritesCaption = favoriteItemsAmount
        ? favoriteItemsAmount
        : 'ничего нет';
    const hasFavoriteItems = favoriteItemsAmount ? true : false;
    renderBlock('user-block', `
    <div class='header-container'>
      <img class='avatar' src='${avatarLink}' 'alt='Wade Warren' />
    <div class='info'>
    <p class='name'>${userName}</p>
    <p class='fav'>
    <i class='heart-icon${hasFavoriteItems ? ' active' : ''}'></i>${favoritesCaption}
          </p>
      </div>
    </div>
    `);
}
class IUser {
}
export const getUserDate = localStorageUser => {
    const user = JSON.parse(localStorage.getItem(localStorageUser));
    if (user instanceof IUser) {
        console.log(user.userName, user.avatarLink);
    }
};
class If {
}
export const getFavoritesAmount = localFavoriteAmounts => {
    const favoriteItemsAmount = JSON.parse(localStorage.getItem(localFavoriteAmounts));
    if (favoriteItemsAmount instanceof If) {
        console.log(favoriteItemsAmount);
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91c2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFRdkMsTUFBTSxVQUFVLGVBQWUsQ0FDN0IsUUFBZ0IsRUFDaEIsVUFBa0IsRUFDbEIsbUJBQTRCO0lBRTVCLFlBQVksQ0FBQyxPQUFPLENBQ2xCLE1BQU0sRUFDTixJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLENBQUMsQ0FDL0QsQ0FBQztJQUNGLElBQUksbUJBQW1CLEVBQUU7UUFDdkIsWUFBWSxDQUFDLE9BQU8sQ0FDbEIsaUJBQWlCLEVBQ2pCLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSxDQUFDLENBQzdELENBQUM7S0FDSDtJQUNELE1BQU0sZ0JBQWdCLEdBQUcsbUJBQW1CO1FBQzFDLENBQUMsQ0FBQyxtQkFBbUI7UUFDckIsQ0FBQyxDQUFDLFlBQVksQ0FBQztJQUNqQixNQUFNLGdCQUFnQixHQUFHLG1CQUFtQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUM1RCxXQUFXLENBQ1QsWUFBWSxFQUNaOztpQ0FFNkIsVUFBVTs7c0JBRXJCLFFBQVE7OzBCQUd4QixnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUNqQyxTQUFTLGdCQUFnQjs7OztLQUl4QixDQUNGLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxLQUFLO0NBR1Y7QUFNRCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQWdCLGdCQUFnQixDQUFDLEVBQUU7SUFDekQsTUFBTSxJQUFJLEdBQVksSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQztJQUN6RSxJQUFJLElBQUksWUFBWSxLQUFLLEVBQUU7UUFDekIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztLQUM3QztBQUNILENBQUMsQ0FBQztBQUVGLE1BQU0sRUFBRTtDQUVQO0FBTUQsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQXNCLG9CQUFvQixDQUFDLEVBQUU7SUFDMUUsTUFBTSxtQkFBbUIsR0FBWSxJQUFJLENBQUMsS0FBSyxDQUM3QyxZQUFZLENBQUMsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQzNDLENBQUM7SUFDRixJQUFJLG1CQUFtQixZQUFZLEVBQUUsRUFBRTtRQUNyQyxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUM7S0FDbEM7QUFDSCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXJCbG9jayB9IGZyb20gJy4vbGliLmpzJztcblxuaW50ZXJmYWNlIHJlbmRlclVzZXJCbG9ja1Byb3BzIHtcbiAgZmF2b3JpdGVJdGVtc0Ftb3VudDogbnVtYmVyO1xuICB1c2VyTmFtZTogc3RyaW5nO1xuICBhdmF0YXJMaW5rOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZW5kZXJVc2VyQmxvY2soXG4gIHVzZXJOYW1lOiBzdHJpbmcsXG4gIGF2YXRhckxpbms6IHN0cmluZyxcbiAgZmF2b3JpdGVJdGVtc0Ftb3VudD86IG51bWJlcixcbikge1xuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcbiAgICAndXNlcicsXG4gICAgSlNPTi5zdHJpbmdpZnkoeyB1c2VyTmFtZTogdXNlck5hbWUsIGF2YXRhckxpbms6IGF2YXRhckxpbmsgfSksXG4gICk7XG4gIGlmIChmYXZvcml0ZUl0ZW1zQW1vdW50KSB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXG4gICAgICAnZmF2b3JpdGVzQW1vdW50JyxcbiAgICAgIEpTT04uc3RyaW5naWZ5KHsgZmF2b3JpdGVJdGVtc0Ftb3VudDogZmF2b3JpdGVJdGVtc0Ftb3VudCB9KSxcbiAgICApO1xuICB9XG4gIGNvbnN0IGZhdm9yaXRlc0NhcHRpb24gPSBmYXZvcml0ZUl0ZW1zQW1vdW50XG4gICAgPyBmYXZvcml0ZUl0ZW1zQW1vdW50XG4gICAgOiAn0L3QuNGH0LXQs9C+INC90LXRgic7XG4gIGNvbnN0IGhhc0Zhdm9yaXRlSXRlbXMgPSBmYXZvcml0ZUl0ZW1zQW1vdW50ID8gdHJ1ZSA6IGZhbHNlO1xuICByZW5kZXJCbG9jayhcbiAgICAndXNlci1ibG9jaycsXG4gICAgYFxuICAgIDxkaXYgY2xhc3M9J2hlYWRlci1jb250YWluZXInPlxuICAgICAgPGltZyBjbGFzcz0nYXZhdGFyJyBzcmM9JyR7YXZhdGFyTGlua30nICdhbHQ9J1dhZGUgV2FycmVuJyAvPlxuICAgIDxkaXYgY2xhc3M9J2luZm8nPlxuICAgIDxwIGNsYXNzPSduYW1lJz4ke3VzZXJOYW1lfTwvcD5cbiAgICA8cCBjbGFzcz0nZmF2Jz5cbiAgICA8aSBjbGFzcz0naGVhcnQtaWNvbiR7XG4gICAgICBoYXNGYXZvcml0ZUl0ZW1zID8gJyBhY3RpdmUnIDogJydcbiAgICB9Jz48L2k+JHtmYXZvcml0ZXNDYXB0aW9ufVxuICAgICAgICAgIDwvcD5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIGAsXG4gICk7XG59XG5cbmNsYXNzIElVc2VyIGltcGxlbWVudHMgT21pdDxyZW5kZXJVc2VyQmxvY2tQcm9wcywgJ2Zhdm9yaXRlSXRlbXNBbW91bnQnPiB7XG4gIHVzZXJOYW1lOiBzdHJpbmc7XG4gIGF2YXRhckxpbms6IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIGdldFVzZXJEYXRlIHtcbiAgKHVzZXI6IHN0cmluZyk6IHZvaWQ7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRVc2VyRGF0ZTogZ2V0VXNlckRhdGUgPSBsb2NhbFN0b3JhZ2VVc2VyID0+IHtcbiAgY29uc3QgdXNlcjogdW5rbm93biA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0obG9jYWxTdG9yYWdlVXNlcikpO1xuICBpZiAodXNlciBpbnN0YW5jZW9mIElVc2VyKSB7XG4gICAgY29uc29sZS5sb2codXNlci51c2VyTmFtZSwgdXNlci5hdmF0YXJMaW5rKTtcbiAgfVxufTtcblxuY2xhc3MgSWYgaW1wbGVtZW50cyBQaWNrPHJlbmRlclVzZXJCbG9ja1Byb3BzLCAnZmF2b3JpdGVJdGVtc0Ftb3VudCc+IHtcbiAgZmF2b3JpdGVJdGVtc0Ftb3VudDogbnVtYmVyO1xufVxuXG5pbnRlcmZhY2UgZ2V0RmF2b3JpdGVBbW91bnQge1xuICAobG9jYWxGYXZvcml0ZUFtb3VudHM6IHN0cmluZyk6IHZvaWQ7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRGYXZvcml0ZXNBbW91bnQ6IGdldEZhdm9yaXRlQW1vdW50ID0gbG9jYWxGYXZvcml0ZUFtb3VudHMgPT4ge1xuICBjb25zdCBmYXZvcml0ZUl0ZW1zQW1vdW50OiB1bmtub3duID0gSlNPTi5wYXJzZShcbiAgICBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShsb2NhbEZhdm9yaXRlQW1vdW50cyksXG4gICk7XG4gIGlmIChmYXZvcml0ZUl0ZW1zQW1vdW50IGluc3RhbmNlb2YgSWYpIHtcbiAgICBjb25zb2xlLmxvZyhmYXZvcml0ZUl0ZW1zQW1vdW50KTtcbiAgfVxufTtcbiJdfQ==