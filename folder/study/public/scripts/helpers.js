import { Book } from './book.js';
import { IGenre } from './types.js';
export function serialize(value) {
    if (value == null) {
        return value + '';
    }
    if (value instanceof Book) {
        return `${value.name}, ${value.genre}, ${value.price}`;
    }
    return value.toString();
}
export function showRating(entity) {
    if (entity.rating == null) {
        return 'not rated yet';
    }
    const roundedRating = Math.round(entity.rating);
    let rating = '';
    for (let i = 0; i < roundedRating; i++) {
        rating += '⭐';
    }
    return rating + ` (${entity.rating.toFixed(2)})`;
}
export function showCart(products) {
    let totalPrice = 0;
    products.forEach(product => {
        totalPrice += product.price;
        console.log(`${product.getProductDescription()} x ${product.price} rub.`);
    });
    console.log(`\nTotal items: ${products.length}, total cost: ${totalPrice}`);
}
export function getGenreName(genre) {
    const genreMapping = {
        [IGenre.Adventure]: 'adventure',
        [IGenre.Fantasy]: 'fantasy',
        [IGenre.Horror]: 'horror',
    };
    return genreMapping[genre];
}
export function addToShelf(book, shelfName = 'favorite') {
    console.log(`Следующие книги добавлены на полку ${shelfName}: ${book.name}`);
}
export function addToShelfBunch(shelfName, ...books) {
    books.forEach(book => addToShelf(book, shelfName));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFHakMsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFlBQVksQ0FBQztBQUVwQyxNQUFNLFVBQVUsU0FBUyxDQUFDLEtBQWM7SUFDdEMsSUFBSSxLQUFLLElBQUksSUFBSSxFQUFFO1FBQ2pCLE9BQU8sS0FBSyxHQUFHLEVBQUUsQ0FBQztLQUNuQjtJQUVELElBQUksS0FBSyxZQUFZLElBQUksRUFBRTtRQUN6QixPQUFPLEdBQUcsS0FBSyxDQUFDLElBQUksS0FBSyxLQUFLLENBQUMsS0FBSyxLQUFLLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztLQUN4RDtJQUVELE9BQU8sS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO0FBQzFCLENBQUM7QUFFRCxNQUFNLFVBQVUsVUFBVSxDQUFDLE1BQW1CO0lBQzVDLElBQUksTUFBTSxDQUFDLE1BQU0sSUFBSSxJQUFJLEVBQUU7UUFDekIsT0FBTyxlQUFlLENBQUM7S0FDeEI7SUFDRCxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNoRCxJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUM7SUFDaEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLGFBQWEsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN0QyxNQUFNLElBQUksR0FBRyxDQUFDO0tBQ2Y7SUFDRCxPQUFPLE1BQU0sR0FBRyxLQUFLLE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7QUFDbkQsQ0FBQztBQUVELE1BQU0sVUFBVSxRQUFRLENBQUMsUUFBb0I7SUFDM0MsSUFBSSxVQUFVLEdBQUcsQ0FBQyxDQUFDO0lBQ25CLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDekIsVUFBVSxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDNUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxxQkFBcUIsRUFBRSxNQUFNLE9BQU8sQ0FBQyxLQUFLLE9BQU8sQ0FBQyxDQUFDO0lBQzVFLENBQUMsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsUUFBUSxDQUFDLE1BQU0saUJBQWlCLFVBQVUsRUFBRSxDQUFDLENBQUM7QUFDOUUsQ0FBQztBQUVELE1BQU0sVUFBVSxZQUFZLENBQUMsS0FBYTtJQUN4QyxNQUFNLFlBQVksR0FBRztRQUNuQixDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsRUFBRSxXQUFXO1FBQy9CLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLFNBQVM7UUFDM0IsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsUUFBUTtLQUMxQixDQUFDO0lBRUYsT0FBTyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDN0IsQ0FBQztBQUVELE1BQU0sVUFBVSxVQUFVLENBQUMsSUFBVSxFQUFFLFNBQVMsR0FBRyxVQUFVO0lBQzNELE9BQU8sQ0FBQyxHQUFHLENBQUMsc0NBQXNDLFNBQVMsS0FBSyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztBQUMvRSxDQUFDO0FBRUQsTUFBTSxVQUFVLGVBQWUsQ0FBQyxTQUFTLEVBQUUsR0FBRyxLQUFhO0lBQ3pELEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFDckQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvb2sgfSBmcm9tICcuL2Jvb2suanMnO1xuaW1wb3J0IHsgSVJhdGluZ2FibGUgfSBmcm9tICcuL3JhdGluZ2FibGUuanMnO1xuaW1wb3J0IHsgSVByb2R1Y3QgfSBmcm9tICcuL3Byb2R1Y3QnO1xuaW1wb3J0IHsgSUdlbnJlIH0gZnJvbSAnLi90eXBlcy5qcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemUodmFsdWU6IHVua25vd24pIHtcbiAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICByZXR1cm4gdmFsdWUgKyAnJztcbiAgfVxuXG4gIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEJvb2spIHtcbiAgICByZXR1cm4gYCR7dmFsdWUubmFtZX0sICR7dmFsdWUuZ2VucmV9LCAke3ZhbHVlLnByaWNlfWA7XG4gIH1cblxuICByZXR1cm4gdmFsdWUudG9TdHJpbmcoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNob3dSYXRpbmcoZW50aXR5OiBJUmF0aW5nYWJsZSkge1xuICBpZiAoZW50aXR5LnJhdGluZyA9PSBudWxsKSB7XG4gICAgcmV0dXJuICdub3QgcmF0ZWQgeWV0JztcbiAgfVxuICBjb25zdCByb3VuZGVkUmF0aW5nID0gTWF0aC5yb3VuZChlbnRpdHkucmF0aW5nKTtcbiAgbGV0IHJhdGluZyA9ICcnO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHJvdW5kZWRSYXRpbmc7IGkrKykge1xuICAgIHJhdGluZyArPSAn4q2QJztcbiAgfVxuICByZXR1cm4gcmF0aW5nICsgYCAoJHtlbnRpdHkucmF0aW5nLnRvRml4ZWQoMil9KWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzaG93Q2FydChwcm9kdWN0czogSVByb2R1Y3RbXSkge1xuICBsZXQgdG90YWxQcmljZSA9IDA7XG4gIHByb2R1Y3RzLmZvckVhY2gocHJvZHVjdCA9PiB7XG4gICAgdG90YWxQcmljZSArPSBwcm9kdWN0LnByaWNlO1xuICAgIGNvbnNvbGUubG9nKGAke3Byb2R1Y3QuZ2V0UHJvZHVjdERlc2NyaXB0aW9uKCl9IHggJHtwcm9kdWN0LnByaWNlfSBydWIuYCk7XG4gIH0pO1xuICBjb25zb2xlLmxvZyhgXFxuVG90YWwgaXRlbXM6ICR7cHJvZHVjdHMubGVuZ3RofSwgdG90YWwgY29zdDogJHt0b3RhbFByaWNlfWApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0R2VucmVOYW1lKGdlbnJlOiBJR2VucmUpIHtcbiAgY29uc3QgZ2VucmVNYXBwaW5nID0ge1xuICAgIFtJR2VucmUuQWR2ZW50dXJlXTogJ2FkdmVudHVyZScsXG4gICAgW0lHZW5yZS5GYW50YXN5XTogJ2ZhbnRhc3knLFxuICAgIFtJR2VucmUuSG9ycm9yXTogJ2hvcnJvcicsXG4gIH07XG5cbiAgcmV0dXJuIGdlbnJlTWFwcGluZ1tnZW5yZV07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRUb1NoZWxmKGJvb2s6IEJvb2ssIHNoZWxmTmFtZSA9ICdmYXZvcml0ZScpOiB2b2lkIHtcbiAgY29uc29sZS5sb2coYNCh0LvQtdC00YPRjtGJ0LjQtSDQutC90LjQs9C4INC00L7QsdCw0LLQu9C10L3RiyDQvdCwINC/0L7Qu9C60YMgJHtzaGVsZk5hbWV9OiAke2Jvb2submFtZX1gKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZFRvU2hlbGZCdW5jaChzaGVsZk5hbWUsIC4uLmJvb2tzOiBCb29rW10pOiB2b2lkIHtcbiAgYm9va3MuZm9yRWFjaChib29rID0+IGFkZFRvU2hlbGYoYm9vaywgc2hlbGZOYW1lKSk7XG59XG4iXX0=